{"ast":null,"code":"import _slicedToArray from \"C:\\\\project1\\\\s02p13c103\\\\web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\project1\\\\s02p13c103\\\\web\\\\src\\\\components\\\\Template\\\\Content.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CardContent from '@material-ui/core/CardContent';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    maxWidth: 1800,\n    margin: 'auto',\n    overflow: 'hidden'\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)'\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize\n  },\n  block: {\n    display: 'block'\n  },\n  addUser: {\n    marginRight: theme.spacing(1)\n  },\n  contentWrapper: {\n    margin: '40px 16px'\n  },\n  Card: {\n    height: 250,\n    width: 250,\n    margin: '20px 0px'\n  }\n}));\n\nfunction Content() {\n  const classes = useStyles();\n\n  const _useState = useState([{\n    orderNum: 101,\n    itemList: {\n      menu: \"hamberger\",\n      ea: 2\n    }\n  }, 0, 0, 0, 0, 0, 0, 0]),\n        _useState2 = _slicedToArray(_useState, 2),\n        orders = _useState2[0],\n        setOrder = _useState2[1]; // 데이터 전부를 받아 전부 card로 만듬\n\n\n  const orderCard = orders.map((order, idx) => {\n    if (order === 0) {\n      return React.createElement(Card, {\n        className: classes.Card,\n        variant: \"outlined\",\n        display: \"inline\",\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Card, {\n        className: classes.Card,\n        variant: \"outlined\",\n        display: \"inline\",\n        key: idx,\n        onClick: () => {\n          console.log(\"aa\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.numbering,\n        color: \"textSecondary\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, order.orderNum), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, order.itemList.menu), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, order.itemList.ea)));\n    }\n  }); // orderCard 중 8개를 받아 하나의 페이지에 출력할 데이터만 뽑음\n\n  const orderList = orderCard => {\n    return React.createElement(React.Fragment, null, React.createElement(Grid, {\n      container: true,\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, orderCard.slice(0, 4)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, orderCard.slice(4, 8)));\n  };\n\n  return React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(ArrowBackIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, orderList(orderCard)), React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(ArrowForwardIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })))));\n}\n\nContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default Content;","map":{"version":3,"sources":["C:/project1/s02p13c103/web/src/components/Template/Content.js"],"names":["React","useState","PropTypes","Typography","Paper","Grid","CardContent","Card","makeStyles","Button","ArrowBackIcon","ArrowForwardIcon","useStyles","theme","paper","maxWidth","margin","overflow","searchBar","borderBottom","searchInput","fontSize","typography","block","display","addUser","marginRight","spacing","contentWrapper","height","width","Content","classes","orderNum","itemList","menu","ea","orders","setOrder","orderCard","map","order","idx","console","log","numbering","orderList","slice","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    maxWidth: 1800,\r\n    margin: 'auto',\r\n    overflow: 'hidden',\r\n  },\r\n  searchBar: {\r\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n  },\r\n  searchInput: {\r\n    fontSize: theme.typography.fontSize,\r\n  },\r\n  block: {\r\n    display: 'block',\r\n  },\r\n  addUser: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  contentWrapper: {\r\n    margin: '40px 16px',\r\n  },\r\n  Card: {\r\n    height: 250,\r\n    width: 250,\r\n    margin: '20px 0px'\r\n  },\r\n}))\r\n\r\n\r\n\r\n\r\nfunction Content() {\r\n  const classes = useStyles();\r\n  const [orders, setOrder] = useState([{\r\n    orderNum: 101,\r\n    itemList: {\r\n      menu: \"hamberger\",\r\n      ea: 2\r\n    }\r\n  },\r\n    0, 0, 0, 0, 0, 0, 0])\r\n\r\n  // 데이터 전부를 받아 전부 card로 만듬\r\n  const orderCard = orders.map((order, idx) => {\r\n    if (order === 0) {\r\n      return (\r\n        <Card className={classes.Card} variant=\"outlined\" display=\"inline\" key={idx} />\r\n\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <Card className={classes.Card} variant=\"outlined\" display=\"inline\" key={idx} onClick={() => { console.log(\"aa\") }}>\r\n          <CardContent>\r\n            <Typography className={classes.numbering} color=\"textSecondary\" align=\"center\">\r\n              {order.orderNum}\r\n            </Typography>\r\n            <h3>{order.itemList.menu}</h3>\r\n            <h4>{order.itemList.ea}</h4>\r\n          </CardContent>\r\n        </Card>\r\n      )\r\n    }\r\n  })\r\n\r\n  // orderCard 중 8개를 받아 하나의 페이지에 출력할 데이터만 뽑음\r\n  const orderList = (orderCard) => {\r\n    return (\r\n      <>\r\n\r\n        <Grid container justify=\"space-between\">\r\n          {orderCard.slice(0, 4)}\r\n        </Grid>\r\n        <br />\r\n        <Grid container justify=\"space-between\">\r\n          {orderCard.slice(4, 8)}\r\n        </Grid>\r\n\r\n      </>\r\n\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Grid container>\r\n        <Grid item xs={1} container justify=\"center\" alignItems=\"center\">\r\n          <Button variant=\"contained\"><ArrowBackIcon /></Button>\r\n        </Grid>\r\n        <Grid item xs={10}>\r\n          {orderList(orderCard)}\r\n        </Grid>\r\n        <Grid item xs={1} container justify=\"center\" alignItems=\"center\">\r\n          <Button variant=\"contained\"><ArrowForwardIcon /></Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Content"]},"metadata":{},"sourceType":"module"}